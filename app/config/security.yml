security:
    firewalls:
        portfolio:
            pattern:    ^/
            anonymous: ~
            form_login:
                login_path: security_login
                check_path: security_login_check
            logout:
                path: security_logout
                target: /%locale%
            provider: chain_provider

    access_control:
        -
            path: ^/admin
            allow_if: "has_role('ROLE_ADMIN') or (has_role('ROLE_USER') and '127.0.0.1' == request.getClientIp() and 'localhost.symfony-tutorial.com' == request.getHost() and request.getMethod() in ['GET'])"

    providers:
        chain_provider:
            chain:
                providers: [in_memory, in_database] 
        in_memory:
            memory:
                users:
                    javiacei:   { password: 1234, roles: [ 'ROLE_USER' ] }
                    admin:      { password: admin, roles: [ 'ROLE_ADMIN' ] }
        in_database:
            entity:
                class: Acme\PortfolioBundle\Entity\User
                property: username

    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Acme\PortfolioBundle\Entity\User:
            algorithm: bcrypt
            cost: 12

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
